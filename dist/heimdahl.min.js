(()=>{var g=class f{globalThis;HeimdahlClient=f;constructor(l){let n="https://api.heimdahl.xyz/v1",a="wss://api.heimdahl.xyz/v1";this.apiKey=l,this.baseUrl=n,this.baseWSUrl=a,this.headers={Authorization:`Bearer ${l}`,"Content-Type":"application/json"}}async _createConnection(l,n){var a=new WebSocket(`${this.baseWSUrl}/${l}?api_key=${this.apiKey}`);a.onmessage=function(e){var t=JSON.parse(e.data);n(t)},a.onerror=function(e){throw e}}async _makeRequest(l,n=null){let a=new URL(`${this.baseUrl}/${l}`);n&&Object.keys(n).forEach(t=>{n[t]!==null&&n[t]!==void 0&&a.searchParams.append(t,n[t])});let e;if(e=await fetch(a.toString(),{method:"GET",headers:this.headers}),!e.ok)throw new Error(`API request failed with status ${e.status}: ${e.statusText}`);return await e.json()}async getChains(){return this._makeRequest("chains",{})}async getContracts(){return this._makeRequest("contracts",{})}async getSwaps({chain:l="all",network:n="mainnet",token1:a=null,token2:e=null,sizeBucket:t="all",page:o=0,pageSize:p=10}={}){let s=[l,n];a&&(s.push(a),e?(s.push(e),s.push(t)):(s.push("all"),s.push(t)));let u=`swaps/list/${s.map(c=>encodeURIComponent(c)).join(".")}`,h={page:o,pageSize:p};return this._makeRequest(u,h)}async getTransfers({chain:l="all",network:n="mainnet",token:a="all",fromAddress:e="all",toAddress:t="all",page:o=0,pageSize:p=10}={}){let s=[l,n];a&&(s.push(a.toLowerCase()),e?(s.push(e),t?s.push(t):s.push("all")):(s.push("all"),t?s.push(t):s.push("all"))),s.push("all");let u=`transfers/list/${s.map(c=>encodeURIComponent(c)).join(".")}`,h={page:o,pageSize:p};return this._makeRequest(u,h)}async streamTransfers({chain:l="all",network:n="mainnet",token:a="all",fromAddress:e="all",toAddress:t="all",page:o=0,pageSize:p=10}={},s){let r=[l,n];a&&(r.push(a.toLowerCase()),e?(r.push(e),t?r.push(t):r.push("all")):(r.push("all"),t?r.push(t):r.push("all"))),r.push("all");let h=`transfers/stream/${r.map(c=>encodeURIComponent(c)).join(".")}`;return this._createConnection(h,s)}async getEvents({chain:l,tokenAddress:n,eventName:a}){let e=`events/list/${l}.mainnet.${n}.${a}`;return this._makeRequest(e)}async searchSwapsByTokenPair({token1:l,token2:n,chain:a="all",network:e="mainnet",sizeBucket:t="all",limit:o=100}){let p=[],s=0,r=Math.min(100,o);for(;p.length<o;){let i=await this.getSwaps({chain:a,network:e,token1:l,token2:n,sizeBucket:t,page:s,pageSize:r});if(!i||!i.swaps||i.swaps.length===0||(p.push(...i.swaps),i.swaps.length<r))break;s+=1}return p.slice(0,o)}async getTokenTransfers({token:l,fromAddress:n="all",toAddress:a="all",chain:e="all",network:t="mainnet",limit:o=100}){let p=[],s=0,r=Math.min(100,o);for(;p.length<o;){let i=await this.getTransfers({chain:e,network:t,token:l,fromAddress:n,toAddress:a,page:s,pageSize:r});if(!i||i.length===0||(p.push(...i),i.length<r))break;s+=1}return p.slice(0,o)}close(){}};globalThis.HeimdahlClient=g;})();
